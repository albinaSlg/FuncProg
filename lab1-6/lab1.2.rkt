;; Рекурсивна функція перевірки простоти числа
(define (is-prime n divisor)
 (cond
   ;; Якщо дільник більше √n, число просте
   ((> (* divisor divisor) n) #t)
   ;; Якщо число ділиться на дільник без залишку, воно складене
   ((= (remainder n divisor) 0) #f)
   ;; Рекурсивний виклик з наступним дільником
   (else (is-prime n (+ divisor 1)))))

;; Основна функція для перевірки числа
(define (check-prime)
 (display "Введіть натуральне число n > 1: ")
 (let ((n (read)))
   (if (> n 1) ; Перевірка, що число більше 1
       (if (is-prime n 2) ; Починаємо перевірку з дільника 2
           (display "YES") ; Число просте
           (display "NO")) ; Число складене
       (display "Помилка: число повинно бути більше 1")))) ; Обробка некоректного вводу

;; Виклик основної функції
(check-prime)
